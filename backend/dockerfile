# 使用 Python 3.12-slim 作为基础镜像
FROM python:3.12-slim

# **手动创建 `/etc/apt/sources.list`**
RUN echo "deb http://mirrors.ustc.edu.cn/debian bookworm main contrib non-free" > /etc/apt/sources.list && \
    echo "deb http://mirrors.ustc.edu.cn/debian-security bookworm-security main contrib non-free" >> /etc/apt/sources.list && \
    echo "deb http://mirrors.ustc.edu.cn/debian bookworm-updates main contrib non-free" >> /etc/apt/sources.list && \
    apt-get update

WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DJANGO_SETTINGS_MODULE=blog_project.settings

# **安装系统依赖，包括 `pkg-config` 和 `libmariadb-dev`**
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    pkg-config \
    libmariadb-dev \
    default-libmysqlclient-dev \
    && apt-get clean

# 复制 Python 依赖
COPY requirements.txt .

# **设置 `CFLAGS` 和 `LDFLAGS`，确保 `mysqlclient` 安装成功**
ENV MYSQLCLIENT_CFLAGS="-I/usr/include/mariadb"
ENV MYSQLCLIENT_LDFLAGS="-L/usr/lib/x86_64-linux-gnu -lmariadb"

# **安装 Python 依赖**
RUN CFLAGS="${MYSQLCLIENT_CFLAGS}" LDFLAGS="${MYSQLCLIENT_LDFLAGS}" pip install --no-cache-dir -r requirements.txt \
    && pip install gunicorn

# 复制项目文件
COPY . .


# 确保静态文件和媒体文件目录存在
RUN mkdir -p /app/staticfiles /app/media \
    && chmod -R 755 /app/staticfiles /app/media

# 复制并设置 entrypoint 脚本
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh



EXPOSE 8000

# 运行 entrypoint.sh，并启动 Gunicorn
ENTRYPOINT ["/entrypoint.sh"]

CMD ["gunicorn", "--bind", "0.0.0.0:8000", "blog_project.wsgi:application"]
